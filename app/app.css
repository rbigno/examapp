/* app css stylesheet */

/*
 * Base structure
 */

/* Move down content because we have a fixed navbar that is 50px tall */
body {
  padding-top: 50px;
/*  overflow-x: hidden;*/
  font-family: "Roboto Slab","Helvetica Neue",Helvetica,Arial,sans-serif;  
  background-color: #0079BF;
  /*overflow-y:hidden;*/
  height: 100%;
}


/*
 * Global add-ons
 */

.sub-header {
  padding-bottom: 10px;
  border-bottom: 1px solid #eee;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-transform: uppercase;
    font-family: Montserrat,"Helvetica Neue",Helvetica,Arial,sans-serif;
    font-weight: 700;
}

/*
 * Top navigation
 * Hide default border to remove 1px line.
 */
.navbar-fixed-top {
  border: 0;
}

.navbar-inverse .navbar-brand {
    font-family: "Kaushan Script","Helvetica Neue",Helvetica,Arial,cursive;
    color: #fed136;
    font-size: 2em;
}

/*
 * Sidebar
 */

/* Hide for mobile, show later */
.sidebar {
  display: none;
}
@media (min-width: 768px) {
  .sidebar {
    position: fixed;
    top: 51px;
    bottom: 0;
    left: 0;
    z-index: 1000;
    display: block;
    padding: 20px;
    overflow-x: hidden;
    overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
    background-color: #f5f5f5;
    border-right: 1px solid #eee;
  }
}

/* Sidebar navigation */
.nav-sidebar {
  margin-right: -21px; /* 20px padding + 1px border */
  margin-bottom: 20px;
  margin-left: -20px;
}
.nav-sidebar > li > a {
  padding-right: 20px;
  padding-left: 20px;
}
.nav-sidebar > .active > a,
.nav-sidebar > .active > a:hover,
.nav-sidebar > .active > a:focus {
  color: #fff;
  background-color: #428bca;
}


/*
 * Main content
 */

.main {
  padding: 20px;
}
@media (min-width: 768px) {
  .main {
    padding-right: 40px;
    padding-left: 40px;
  }
}
.main .page-header {
  margin-top: 0;
}

section#maincontent {
  margin-top: 20px;
}

/*
 * Placeholder dashboard ideas
 */

.placeholders {
  margin-bottom: 30px;
  text-align: center;
}
.placeholders h4 {
  margin-bottom: 0;
}
.placeholder {
  margin-bottom: 20px;
}
.placeholder img {
  display: inline-block;
  border-radius: 50%;
}

.navbar-inverse {
    background-color: #0067A3;
    border-color: #0067A3;
}

footer .panel-primary {
  padding-left: 20px;
  padding-right: 20px;
}

footer .panel-default {
    border-color: #bcbcbc;
    width: 100% !important;
    margin: 0 auto;
    margin-bottom: 10px;
 -moz-column-width: 25em;
 -webkit-column-width: 25em;
 -moz-column-gap: .5em;
 -webkit-column-gap: .5em;     
}

footer .box {
  width: 254px !important;
  margin-bottom: 10px;
}

footer h4 {
  margin-bottom:20px;
}

footer .listContent ul {
  list-style: none !important; 
}

footer .listContent ul[dnd-list],
footer .listContent ul[dnd-list] > li {
  float: left;
  /*position: relative;*/
  display: inline-block;
}

footer .listContent ul[dnd-list] .dndDraggingSource {
    display: none;
}

footer .listContent ul[dnd-list] .dndPlaceholder {
    display: block;
    width: 254px !important;
    border-radius: 4px;  
    background-color: #ddd;
    min-height: 62px;
    padding: 0px 10px !important;
    margin-bottom: -1px;    
    margin: 0 auto !important;
    /*margin-bottom: 10px !important;*/
 -moz-column-width: 25em;
 -webkit-column-width: 25em;
 -moz-column-gap: .5em;
 -webkit-column-gap: .5em;      
}

.panel {
  background-color: #f9fbfc !important;
}

.panel-info {
  width: 90%;
  margin: 0 auto;
  margin-bottom: 10px;
/*  position: absolute;
  display: inline-block;*/
}

.panel-default {
    border-color: #bcbcbc;
    width: 95%;
    margin: 0 auto;
    margin-bottom: 10px;
}

.panel-body {
  width: 100%;
  position: relative;
  display: inline-block;  
}

.panel-primary:hover .add-btn {
  opacity: 1;  
}

.panel-primary .add-btn {
  opacity: 0.75;  
  -webkit-transition: all ease .5s;
  -moz-transition: all ease .5s;
  transition: all ease .5s;    
}

.panel-default:hover .edit {
  display: block;
  opacity: 0.50;      
}

.edit {
  padding-top: 7px; 
  padding-left: 7px;
  position: absolute;
  left: 0;
  top: 0;
  display: none;
  opacity: 1;
  -webkit-transition: all ease .5s;
  -moz-transition: all ease .5s;
  transition: all ease .5s;    
}

.edit a {
  color: #000;
}

.panel-default:hover .delete {
  display: block;
  opacity: 0.50;    
}

.delete {
  padding-top: 7px; 
  padding-right: 7px;
  position: absolute;
  right: 0;
  top: 0;
  display: none;
  opacity: 1;
  -webkit-transition: all ease .5s;
  -moz-transition: all ease .5s;
  transition: all ease .5s;    
}

.delete a {
  color: #000;
}

.panel-default:hover .trashdelete {
  display: block;
  opacity: 0.50;    
}

.trashdelete {
  padding-top: 7px; 
  padding-right: 7px;
  position: absolute;
  right: 0;
  top: 0;
  display: none;
  opacity: 1;
}

.trashdelete a {
  color: #000;
/*  -webkit-transition: all ease .5s;
  -moz-transition: all ease .5s;
  transition: all ease .5s;      */
}

.color-white {
  color: #333 !important;
  cursor: pointer !important;
}

.apply-white {
  color: #333 !important;  
  background-color: white !important;    
}

.color-blue {
  color: blue !important;
  cursor: pointer !important;  
}

.apply-blue {
  color: white !important;  
  background-color: blue !important;    
}

.color-red {
  color: red !important;
  cursor: pointer !important;  
}

.apply-red {
  color: white !important;  
  background-color: red !important;    
}

.color-green {
  color: green !important;
  cursor: pointer !important;  
}

.apply-green {
  color: white !important;  
  background-color: green !important;    
}

.color-yellow {
  color: yellow !important;
  cursor: pointer !important;  
}

.apply-yellow {
  color: gray !important;  
  background-color: yellow !important;    
}

.clearall {
  cursor: pointer;
  opacity: 0.50;
}

.clearall:hover {
  cursor: pointer;
  opacity: 1;
}

.animated-element.ng-enter,
.animated-element.ng-move,
.animated-element.custom-class-add,
.animated-element.custom-class-remove
{
  -webkit-transition: zoomInDown 1.5s;
  animation: zoomInDown 1.5s;
}

.animated-element.ng-leave {
  -webkit-transition: zoomOutDown 0.5s;
  animation: zoomOutDown 0.5s;  
}

.animated-element.ng-enter { opacity: 0; }
.animated-element.ng-enter.ng-enter-active { opacity: 1; }

.animated-element.ng-leave { opacity: 1; }
.animated-element.ng-leave.ng-leave-active { opacity: 0; }

.animated-element.ng-move { opacity: 0; }
.animated-element.ng-move.ng-move-active { opacity: 1; }
.animated-element.ng-leave-stagger,
.animated-element.ng-enter-stagger
{
  /* Set a 400ms delay between each successive move animation */  
  -webkit-transition-delay: 0.4s;
  transition-delay: 0.4s;

  /*
   * In case the stagger doesn't work then these two values
   * must be set to 0 to avoid an accidental CSS inheritance.
  */
  -webkit-transition-duration: 0s;
  transition-duration: 0s;
}

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
 .listContent ul {
  list-style: none !important; 
}

.listContent ul[dnd-list],
.listContent ul[dnd-list] > li {
  position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.listContent ul[dnd-list] {
    min-height: 62px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.listContent ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.listContent ul[dnd-list] .dndPlaceholder {
    display: block;
    width: 90% !important;
    border-radius: 4px;  
    background-color: #ddd;
    min-height: 62px;
    padding: 0px 10px !important;
    margin-bottom: -1px;    
    margin: 0 auto !important;
    margin-bottom: 10px !important;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.listContent ul[dnd-list] li {
    display: block;
    padding: 0px 10px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.listContent ul[dnd-list] li.selected {
/*    background-color: #dff0d8;
    color: #3c763d;*/
}

.collable {
  display: block;
  width: 10px !important;
}

.modal-title {
  color: #282828 !important;
}

.modal-header {
    border-bottom: none !important; 
}

.modal-body {
    padding-top: 0px !important;
}

.scroll-style::-webkit-scrollbar-track
{
  /*-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);*/
  border-radius: 10px;
  background-color: #F5F5F5;
}

.scroll-style::-webkit-scrollbar
{
  width: 12px;
  background-color: #F5F5F5;
}

.scroll-style::-webkit-scrollbar-thumb
{
  border-radius: 10px;
  /*-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);*/
  background-color: #03A1FF;
}

.save-btn {
  color: #26A65B;
  font-size: 21px;
  font-weight: bold;
  line-height: 1;
  text-shadow: 0 1px 0 #fff;
}

mark, .mark {
    background-color: #f7e68f;
}